[{"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\index.js":"1","D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\App.js":"2","D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\components\\item-icons\\item.js":"3","D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\components\\item-icons\\Item.js":"4","D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\assets\\sprites\\index.js":"5","D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\components\\Store.js":"6","D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\pages\\Signup.js":"7","D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\pages\\Login.js":"8"},{"size":277,"mtime":1669506351376,"results":"9","hashOfConfig":"10"},{"size":600,"mtime":1669506351368,"results":"11","hashOfConfig":"10"},{"size":951,"mtime":1669508126790,"results":"12","hashOfConfig":"10"},{"size":811,"mtime":1669240610350,"results":"13","hashOfConfig":"10"},{"size":853,"mtime":1669506346543,"results":"14","hashOfConfig":"10"},{"size":4126,"mtime":1669531851167,"results":"15","hashOfConfig":"10"},{"size":3800,"mtime":1669506351377,"results":"16","hashOfConfig":"10"},{"size":3239,"mtime":1669506351377,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2m8y0q",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\index.js",[],["36","37"],"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\App.js",[],"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\components\\item-icons\\item.js",[],"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\components\\item-icons\\Item.js",[],"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\assets\\sprites\\index.js",[],"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\components\\Store.js",[],"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\pages\\Signup.js",[],"D:\\Kiefer\\Documents\\School\\UA Bootcamp\\projects\\project-3\\merchant-alchemist\\client\\src\\pages\\Login.js",["38"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport background from '../assets/backgrounds/homepage.png';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    // Getting the value and name of the input which triggered the change\r\n    const { target } = e;\r\n    const inputType = target.name;\r\n    const inputValue = target.value;\r\n\r\n    const isEmail = (email) => /^([a-z0-9_.-]+)@([\\da-z.-]+)\\.([a-z.]{2,6})$/.test(email);\r\n\r\n    // Based on the input type, we set the state of either email, username, and password\r\n    if (inputType === 'username') {\r\n      setUsername(inputValue);\r\n      if (!inputValue) {\r\n        setErrorMessage('Please enter your username')\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    }\r\n\r\n    if (inputType === 'password') {\r\n      setPassword(inputValue);\r\n      if (!inputValue) {\r\n        setErrorMessage('Please enter your password')\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\r\n    setUsername('');\r\n    setPassword('');\r\n  };\r\n\r\n  const style = {\r\n    backgroundImage: `url(${background})`,\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    'max-width': '100vw',\r\n    height: '100vh',\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={style}>\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <div className=\"card my-5\">\r\n          <form className=\"card-body cardbody-color p-lg-5\" id=\"signup-form\">\r\n            <div className=\"text-center\">\r\n              <h2 className=\"title pb-4\">Welcome to Merchant Alchemist!</h2>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n            <input\r\n              className=\"form-control\"\r\n              value={username}\r\n              name=\"username\"\r\n              onChange={handleInputChange}\r\n              type=\"username\"\r\n              placeholder=\"username\"\r\n            />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={password}\r\n                name=\"password\"\r\n                onChange={handleInputChange}\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n              />\r\n            </div>\r\n            {errorMessage && (\r\n              <div>\r\n                <p className=\"error-text\">{errorMessage}</p>\r\n              </div>\r\n            )}\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-color px-5 mb-1 w-100 card-text\" onClick={handleFormSubmit}>Login</button>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <Link to=\"/signup\"  className=\"text-center\">Need to create an account?</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Login;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":18,"column":11,"nodeType":"45","messageId":"46","endLine":18,"endColumn":18},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'isEmail' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]